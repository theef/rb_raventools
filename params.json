{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"last updated:  November 20, 2012\r\n\r\n\r\n# Working with RavenTools:\r\n\r\n[Generating a RavenTools API Key](https://raven.zendesk.com/entries/243600-raven-api)\r\n\r\n[RavenTools API Documentation](https://api.raventools.com/docs/)\r\n\r\n\r\n\r\n\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'rb_raventools'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install rb_raventools\r\n\r\n## Setup\r\n\r\nOnce 'rb_raventools' is in your project, simply setup a RavenTools api client:\r\n\r\n```ruby\r\n    client = RavenTools::Client.new(\"INSERT_YOUR_API_KEY\")\r\n```\r\n\r\nand from there, you can perform method calls like:\r\n\r\n```ruby\r\n    domains = client.domains\r\n```   \r\n\r\n  \r\n  \r\n\r\n\r\n# Methods\r\n\r\n\r\n\r\n## Profile Information\r\n\r\nTo retrieve available profile information:\r\n\r\n```ruby\r\n    profile = client.profile_info\r\n```\r\n\r\nThis method does not accept additional parameters or options.\r\n\r\n#### Sample Response\r\n\r\nOutput will be a hash of values containing profile information (name, # of keywords).\r\n\r\n```ruby\r\n    # profile = client.profile_info\r\n    {\"name\"=>\"Example Profile\", \"keyword_usage\"=>\"1000\"}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Engines\r\n\r\nTo retrieve all available Search Engines:\r\n\r\n```ruby\r\n    engines = client.engines\r\n```\r\n\r\nThis method does not accept additional parameters or options.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of hash of values containing engine information (id, engine name).\r\n\r\n```ruby\r\n    # engines = client.engines\r\n    [{\"id\"=>\"93\", \"name\"=>\"Yahoo! GR\"}, {\"id\"=>\"94\", \"name\"=>\"Bing NL\"}]\r\n```\r\n\r\n\r\n\r\n\r\n## Domains\r\n\r\nTo find all domains connected to a particular account (as defined by the API Key), simply use:\r\n\r\n```ruby\r\n    domains = client.domains\r\n```\r\n\r\nThis method does not accept additional parameters or options.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of strings, containing all domains available.\r\n\r\n```ruby\r\n    # domains = client.domains\r\n    [\"example1.com\", \"sub.example1.com\", \"example2.org\"]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Domain Information\r\n\r\nTo to find all Search Engines associated with a particular domain:\r\n\r\n```ruby\r\n    domain_info = client.domain_info(\"INSERT_DOMAIN_HERE\")\r\n```\r\n\r\nThis method requires a \"domain\" parameter, which must be a registered domain for your account.  To retrieve these available domains, see the Domains Method above.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of hashes, containing all domain information.\r\n\r\n```ruby\r\n    # domain_info = client.domain_info(\"example1.com\")\r\n    [{\"id\"=>\"1\", \"name\"=>\"Google\"}, {\"id\"=>\"2\", \"name\"=>\"Yahoo!\"}]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Keywords\r\n\r\nTo to find all Keywords associated with your account:\r\n\r\n```ruby\r\n    keywords = client.keywords(\"INSERT_DOMAIN_HERE\")\r\n```\r\n\r\nThis method requires a \"domain\" parameter, which must be a registered domain for your account.  To retrieve these available domains, see the Domains Method above.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of strings, containing all available keywords.\r\n\r\n```ruby\r\n    # keywords = client.keywords(\"example1.com\")\r\n    [\"example 1\", \"test key2\", \"example 2\", \"another keyword\"]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Keywords with Tags\r\n\r\nTo to find all Keywords and their Tags associated with your account:\r\n\r\n```ruby\r\n    keywords = client.keywords_with_tags(\"INSERT_DOMAIN_HERE\")\r\n```\r\n\r\nThis method requires a \"domain\" parameter, which must be a registered domain for your account.  To retrieve these available domains, see the Domains Method above.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of all keywords as hashes with the keyword name and associated tags, with the tags value being an array of strings.\r\n\r\n```ruby\r\n    # keywords = client.keywords_with_tags(\"example1.com\")\r\n    [{\"keyword\"=>\"example keyword\", \"tags\"=>[\"example tag 1\", \"example tag 2\"]}]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Tags\r\n\r\nTo to find all Tags associated with a domain (aggregated through Keywords with Tags).  This aggregates an array of UNIQUE Tags:\r\n\r\n```ruby\r\n    tags = client.tags(\"INSERT_DOMAIN_HERE\")\r\n```\r\n\r\nThis method requires a \"domain\" parameter, which must be a registered domain for your account.  To retrieve these available domains, see the Domains Method above.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array of strings, containing all unique Tags.\r\n\r\n```ruby\r\n    # tags = client.tags(\"INSERT_DOMAIN_HERE\")\r\n    [\"tag one\", \"tag2\", \"tag_three\", \"tag 4\", \"tag five\"]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Tag Information\r\n\r\nTo to find all Keywords associated with a given Tag:\r\n\r\n```ruby\r\n    tag = client.tag_info(\"INSERT_DOMAIN_HERE\", \"INSERT_TAG_NAME\")\r\n```\r\n\r\nThis method requires a \"domain\" parameter and a \"tag\" parameter.  The domain parameter must be a domain associated with your account. To retrieve available domains, see the Domains Method above.  The Tag parameter should be a Tag that is associated with a Keyword within the Domain specified.  If it is not a valid Tag, or it isn't found, 'nil' will be returned.\r\n\r\n#### Sample Response\r\n\r\nOutput will be an array with two values:  'Tag', which is the name of the Tag provided, and 'Keywords' as an array of strings containing all Keyword names that have the specified Tag associated with them.\r\n\r\n```ruby\r\n    # tag = client.tag_info(\"INSERT_DOMAIN_HERE\", \"INSERT_TAG_NAME\")\r\n    [{:name=>\"example_tag\"}, {:keywords=>[\"keyword1\", \"key_word2\"]}]\r\n```\r\n\r\n\r\n\r\n\r\n---\r\n\r\n\r\n# still updating docs...","name":"rb_raventools","tagline":"An unofficial ruby wrapper for the RavenTools SEO API.  Requires an account with RavenTools and an API Key."}